name: Golang CI

on:
  # Ensure build works in a pull request
  pull_request:
    branches: [ $default-branch ]

  # Allow pushes to main to trigger
  push:
    branches: [ $default-branch ]

# Sets up concurrency to ensure that only one job or workflow using the same concurrency group will run at a time.
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint:
    name: "Run golang linting"

    # Specify the job to run on the latest Ubuntu version
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # https://github.com/actions/setup-go
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod

      - name: Check go.mod and go.sum tidiness
        run: |
          go mod tidy
          if [ ! -z "$(git status --porcelain go.mod go.sum)" ]; then
            echo "Need to run 'go mod tidy'";
            exit 1;
          fi

  tests:
    name: "Run golang unit tests"

    # Specify the job to run on the latest Ubuntu version
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # https://github.com/actions/create-github-app-token
      - name: Get Token
        id: app-token
        uses: actions/create-github-app-token@31c86eb3b33c9b601a1f60f98dcbfd1d70f379b4 # v1.10.3
        with:
          app-id: ${{ secrets.GIT_AUTOMATION_PK }}
          private-key: ${{ secrets.GIT_AUTOMATION_PK }}

      # https://github.com/actions/setup-go
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy
          go mod vendor          

      - name: Install required dependencies
        run: go install gotest.tools/gotestsum@ec99a250836f069a524bb9d9b5de0a7a96334ea7 # v1.11.0

      - name: Run unit tests
        run: |
          gotestsum --format github-actions --no-color --format-hide-empty-pkg --junitfile report.xml

  codeql:
    name: Scan code using codeql

    # Specify the job to run on the latest Ubuntu version
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # https://github.com/actions/create-github-app-token
      - name: Get Token
        id: app-token
        uses: actions/create-github-app-token@31c86eb3b33c9b601a1f60f98dcbfd1d70f379b4 # v1.10.3
        with:
          app-id: ${{ secrets.GIT_AUTOMATION_PK }}
          private-key: ${{ secrets.GIT_AUTOMATION_PK }}

      # https://github.com/github/codeql-action
      - name: Initialize CodeQL
        uses: github/codeql-action/init@e1f83c153a6cb7134f035e16e2626b216e7168c9 # v3.26.6
        with:
          languages: go
          token: ${{ steps.app-token.outputs.token }}

      # https://github.com/github/codeql-action
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@e1f83c153a6cb7134f035e16e2626b216e7168c9 # v3.26.6

  security:
    name: Scan code using golang security tools

    # Specify the job to run on the latest Ubuntu version
    runs-on: ubuntu-latest

    # Set read-only permissions for repository contents
    permissions:
      contents: read

    steps:
      # https://github.com/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # https://github.com/actions/create-github-app-token
      - name: Get Token
        id: app-token
        uses: actions/create-github-app-token@31c86eb3b33c9b601a1f60f98dcbfd1d70f379b4 # v1.10.3
        with:
          app-id: ${{ secrets.GIT_AUTOMATION_PK }}
          private-key: ${{ secrets.GIT_AUTOMATION_PK }}

      # https://github.com/actions/setup-go
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod

      - name: Install required dependencies
        shell: bash
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@3740f5cb12a3f93b18dbe200c4bcb6256f8586e2 # v1.1.2
          go install github.com/zricethezav/gitleaks/v8@dab7d0292ad7ebc52c7adfcad755f92e2f7c9a9a # v8.18.1
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.19.0

      - name: Run gitleaks (Scan for hard-coded secrets in git repository)
        shell: bash
        run: gitleaks detect --verbose

      - name: Run GoSec (Golang code issues)
        shell: bash
        run: gosec ./...

      - name: Run govulncheck (Golang CLI issues)
        shell: bash
        run: govulncheck ./...
